apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: expense
  name: expense-pod-reader #role name
rules:
- apiGroups: [""] # "" indicates the core API group
# below given resources and verbs are role permissions
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---  
# Role binding --> to whom this role and permissions to be given
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "harish" to read pods in the "expense" namespace.
# You need to already have a Role named "expense-pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: expense-pod-reader
  namespace: expense
subjects:
# You can specify more than one "subject"
- kind: User
  name: harish # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: expense-pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
# how eks knows to refer authentication from aws IAM? we need to do something that EKS should connect with aws IAM

